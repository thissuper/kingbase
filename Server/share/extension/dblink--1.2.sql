/* contrib/dblink/dblink--1.2.sql */

-- complain if script is sourced in ksql, rather than via CREATE EXTENSION
\echo Use "CREATE EXTENSION dblink" to load this file. \quit

-- dblink_connect now restricts non-superusers to password
-- authenticated connections
CREATE INTERNAL FUNCTION SYS_CATALOG.DBLINK_CONNECT (TEXT)
RETURNS text
AS 'MODULE_PATHNAME','dblink_connect'
LANGUAGE C STRICT PARALLEL RESTRICTED;

CREATE INTERNAL FUNCTION SYS_CATALOG.DBLINK_CONNECT (TEXT, TEXT)
RETURNS text
AS 'MODULE_PATHNAME','dblink_connect'
LANGUAGE C STRICT PARALLEL RESTRICTED;

-- dblink_connect_u allows non-superusers to use
-- non-password authenticated connections, but initially
-- privileges are revoked from public
CREATE INTERNAL FUNCTION SYS_CATALOG.DBLINK_CONNECT_U (TEXT)
RETURNS text
AS 'MODULE_PATHNAME','dblink_connect'
LANGUAGE C STRICT PARALLEL RESTRICTED SECURITY DEFINER;

CREATE INTERNAL FUNCTION SYS_CATALOG.DBLINK_CONNECT_U (TEXT, TEXT)
RETURNS text
AS 'MODULE_PATHNAME','dblink_connect'
LANGUAGE C STRICT PARALLEL RESTRICTED SECURITY DEFINER;

REVOKE ALL ON FUNCTION SYS_CATALOG.DBLINK_CONNECT_U (TEXT) from PUBLIC;
REVOKE ALL ON FUNCTION SYS_CATALOG.DBLINK_CONNECT_U (TEXT, TEXT) from PUBLIC;

CREATE INTERNAL FUNCTION SYS_CATALOG.DBLINK_DISCONNECT ()
RETURNS text
AS 'MODULE_PATHNAME','dblink_disconnect'
LANGUAGE C STRICT PARALLEL RESTRICTED;

CREATE INTERNAL FUNCTION SYS_CATALOG.DBLINK_DISCONNECT (TEXT)
RETURNS text
AS 'MODULE_PATHNAME','dblink_disconnect'
LANGUAGE C STRICT PARALLEL RESTRICTED;

CREATE INTERNAL FUNCTION SYS_CATALOG.DBLINK_OPEN (TEXT, TEXT)
RETURNS text
AS 'MODULE_PATHNAME','dblink_open'
LANGUAGE C STRICT PARALLEL RESTRICTED;

CREATE INTERNAL FUNCTION SYS_CATALOG.DBLINK_OPEN (TEXT, TEXT, BOOLEAN)
RETURNS text
AS 'MODULE_PATHNAME','dblink_open'
LANGUAGE C STRICT PARALLEL RESTRICTED;

CREATE INTERNAL FUNCTION SYS_CATALOG.DBLINK_OPEN (TEXT, TEXT, TEXT)
RETURNS text
AS 'MODULE_PATHNAME','dblink_open'
LANGUAGE C STRICT PARALLEL RESTRICTED;

CREATE INTERNAL FUNCTION SYS_CATALOG.DBLINK_OPEN (TEXT, TEXT, TEXT, BOOLEAN)
returns TEXT
AS 'MODULE_PATHNAME','dblink_open'
LANGUAGE C STRICT PARALLEL RESTRICTED;

CREATE INTERNAL FUNCTION SYS_CATALOG.DBLINK_FETCH (TEXT, INT)
RETURNS setof record
AS 'MODULE_PATHNAME','dblink_fetch'
LANGUAGE C STRICT PARALLEL RESTRICTED;

CREATE INTERNAL FUNCTION SYS_CATALOG.DBLINK_FETCH (TEXT, INT, BOOLEAN)
RETURNS setof record
AS 'MODULE_PATHNAME','dblink_fetch'
LANGUAGE C STRICT PARALLEL RESTRICTED;

CREATE INTERNAL FUNCTION SYS_CATALOG.DBLINK_FETCH (TEXT, TEXT, INT)
RETURNS setof record
AS 'MODULE_PATHNAME','dblink_fetch'
LANGUAGE C STRICT PARALLEL RESTRICTED;

CREATE INTERNAL FUNCTION SYS_CATALOG.DBLINK_FETCH (TEXT, TEXT, INT, BOOLEAN)
RETURNS setof record
AS 'MODULE_PATHNAME','dblink_fetch'
LANGUAGE C STRICT PARALLEL RESTRICTED;

CREATE INTERNAL FUNCTION SYS_CATALOG.DBLINK_CLOSE (TEXT)
RETURNS text
AS 'MODULE_PATHNAME','dblink_close'
LANGUAGE C STRICT PARALLEL RESTRICTED;

CREATE INTERNAL FUNCTION SYS_CATALOG.DBLINK_CLOSE (TEXT, BOOLEAN)
RETURNS text
AS 'MODULE_PATHNAME','dblink_close'
LANGUAGE C STRICT PARALLEL RESTRICTED;

CREATE INTERNAL FUNCTION SYS_CATALOG.DBLINK_CLOSE (TEXT, TEXT)
RETURNS text
AS 'MODULE_PATHNAME','dblink_close'
LANGUAGE C STRICT PARALLEL RESTRICTED;

CREATE INTERNAL FUNCTION SYS_CATALOG.DBLINK_CLOSE (TEXT, TEXT, BOOLEAN)
RETURNS text
AS 'MODULE_PATHNAME','dblink_close'
LANGUAGE C STRICT PARALLEL RESTRICTED;

CREATE INTERNAL FUNCTION SYS_CATALOG.DBLINK (TEXT, TEXT)
RETURNS setof record
AS 'MODULE_PATHNAME','dblink_record'
LANGUAGE C STRICT PARALLEL RESTRICTED;

CREATE INTERNAL FUNCTION SYS_CATALOG.DBLINK (TEXT, TEXT, BOOLEAN)
RETURNS setof record
AS 'MODULE_PATHNAME','dblink_record'
LANGUAGE C STRICT PARALLEL RESTRICTED;

CREATE INTERNAL FUNCTION SYS_CATALOG.DBLINK (TEXT)
RETURNS setof record
AS 'MODULE_PATHNAME','dblink_record'
LANGUAGE C STRICT PARALLEL RESTRICTED;

CREATE INTERNAL FUNCTION SYS_CATALOG.DBLINK (TEXT, BOOLEAN)
RETURNS setof record
AS 'MODULE_PATHNAME','dblink_record'
LANGUAGE C STRICT PARALLEL RESTRICTED;

CREATE INTERNAL FUNCTION SYS_CATALOG.DBLINK_EXEC (TEXT, TEXT)
RETURNS text
AS 'MODULE_PATHNAME','dblink_exec'
LANGUAGE C STRICT PARALLEL RESTRICTED;

CREATE INTERNAL FUNCTION SYS_CATALOG.DBLINK_EXEC (TEXT, TEXT, BOOLEAN)
RETURNS text
AS 'MODULE_PATHNAME','dblink_exec'
LANGUAGE C STRICT PARALLEL RESTRICTED;

CREATE INTERNAL FUNCTION SYS_CATALOG.DBLINK_EXEC (TEXT)
RETURNS text
AS 'MODULE_PATHNAME','dblink_exec'
LANGUAGE C STRICT PARALLEL RESTRICTED;

CREATE INTERNAL FUNCTION SYS_CATALOG.DBLINK_EXEC (TEXT,BOOLEAN)
RETURNS text
AS 'MODULE_PATHNAME','dblink_exec'
LANGUAGE C STRICT PARALLEL RESTRICTED;

CREATE TYPE sys_catalog.dblink_pkey_results AS (position int, colname text);

CREATE INTERNAL FUNCTION SYS_CATALOG.DBLINK_GET_PKEY (TEXT)
RETURNS setof dblink_pkey_results
AS 'MODULE_PATHNAME','dblink_get_pkey'
LANGUAGE C STRICT PARALLEL RESTRICTED;

CREATE INTERNAL FUNCTION SYS_CATALOG.DBLINK_BUILD_SQL_INSERT (TEXT, INT2VECTOR, INT, _TEXT, _TEXT)
RETURNS text
AS 'MODULE_PATHNAME','dblink_build_sql_insert'
LANGUAGE C STRICT PARALLEL RESTRICTED;

CREATE INTERNAL FUNCTION SYS_CATALOG.DBLINK_BUILD_SQL_DELETE (TEXT, INT2VECTOR, INT, _TEXT)
RETURNS text
AS 'MODULE_PATHNAME','dblink_build_sql_delete'
LANGUAGE C STRICT PARALLEL RESTRICTED;

CREATE INTERNAL FUNCTION SYS_CATALOG.DBLINK_BUILD_SQL_UPDATE (TEXT, INT2VECTOR, INT, _TEXT, _TEXT)
RETURNS text
AS 'MODULE_PATHNAME','dblink_build_sql_update'
LANGUAGE C STRICT PARALLEL RESTRICTED;

CREATE INTERNAL FUNCTION SYS_CATALOG.DBLINK_CURRENT_QUERY ()
RETURNS text
AS 'MODULE_PATHNAME','dblink_current_query'
LANGUAGE C PARALLEL RESTRICTED;

CREATE INTERNAL FUNCTION SYS_CATALOG.DBLINK_SEND_QUERY(TEXT, TEXT)
RETURNS int4
AS 'MODULE_PATHNAME', 'dblink_send_query'
LANGUAGE C STRICT PARALLEL RESTRICTED;

CREATE INTERNAL FUNCTION SYS_CATALOG.DBLINK_IS_BUSY(TEXT)
RETURNS int4
AS 'MODULE_PATHNAME', 'dblink_is_busy'
LANGUAGE C STRICT PARALLEL RESTRICTED;

CREATE INTERNAL FUNCTION SYS_CATALOG.DBLINK_GET_RESULT(TEXT)
RETURNS SETOF record
AS 'MODULE_PATHNAME', 'dblink_get_result'
LANGUAGE C STRICT PARALLEL RESTRICTED;

CREATE INTERNAL FUNCTION SYS_CATALOG.DBLINK_GET_RESULT(TEXT, BOOL)
RETURNS SETOF record
AS 'MODULE_PATHNAME', 'dblink_get_result'
LANGUAGE C STRICT PARALLEL RESTRICTED;

CREATE INTERNAL FUNCTION SYS_CATALOG.DBLINK_GET_CONNECTIONS()
RETURNS text[]
AS 'MODULE_PATHNAME', 'dblink_get_connections'
LANGUAGE C PARALLEL RESTRICTED;

CREATE INTERNAL FUNCTION SYS_CATALOG.DBLINK_CANCEL_QUERY(TEXT)
RETURNS text
AS 'MODULE_PATHNAME', 'dblink_cancel_query'
LANGUAGE C STRICT PARALLEL RESTRICTED;

CREATE INTERNAL FUNCTION SYS_CATALOG.DBLINK_ERROR_MESSAGE(TEXT)
RETURNS text
AS 'MODULE_PATHNAME', 'dblink_error_message'
LANGUAGE C STRICT PARALLEL RESTRICTED;

CREATE INTERNAL FUNCTION SYS_CATALOG.DBLINK_GET_NOTIFY(
    OUT notify_name TEXT,
    OUT be_pid INT4,
    OUT extra TEXT
)
RETURNS setof record
AS 'MODULE_PATHNAME', 'dblink_get_notify'
LANGUAGE C STRICT PARALLEL RESTRICTED;

CREATE INTERNAL FUNCTION SYS_CATALOG.DBLINK_GET_NOTIFY(
    conname TEXT,
    OUT notify_name TEXT,
    OUT be_pid INT4,
    OUT extra TEXT
)
RETURNS setof record
AS 'MODULE_PATHNAME', 'dblink_get_notify'
LANGUAGE C STRICT PARALLEL RESTRICTED;

/* New stuff in 1.1 begins here */
CREATE INTERNAL FUNCTION SYS_CATALOG.DBLINK_FDW_VALIDATOR(
    options text[],
    catalog oid
)
RETURNS void
AS 'MODULE_PATHNAME', 'dblink_fdw_validator'
LANGUAGE C STRICT PARALLEL SAFE;

CREATE FOREIGN DATA WRAPPER dblink_fdw VALIDATOR dblink_fdw_validator;
