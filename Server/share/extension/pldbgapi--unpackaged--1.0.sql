ALTER EXTENSION PLDBGAPI ADD TYPE BREAKPOINT;
ALTER EXTENSION PLDBGAPI ADD TYPE FRAME;

ALTER EXTENSION PLDBGAPI ADD TYPE TARGETINFO;

ALTER EXTENSION PLDBGAPI ADD TYPE VAR;
ALTER EXTENSION PLDBGAPI ADD TYPE PROXYINFO;

ALTER EXTENSION PLDBGAPI ADD FUNCTION PLPGSQL_OID_DEBUG( functionOID OID );

ALTER EXTENSION PLDBGAPI ADD FUNCTION PLDBG_ABORT_TARGET( session INTEGER );
ALTER EXTENSION PLDBGAPI ADD FUNCTION PLDBG_ATTACH_TO_PORT( portNumber INTEGER );
ALTER EXTENSION PLDBGAPI ADD FUNCTION PLDBG_CONTINUE( session INTEGER );
ALTER EXTENSION PLDBGAPI ADD FUNCTION PLDBG_CREATE_LISTENER();
ALTER EXTENSION PLDBGAPI ADD FUNCTION PLDBG_DEPOSIT_VALUE( session INTEGER, varName TEXT, lineNumber INTEGER, value TEXT );
ALTER EXTENSION PLDBGAPI ADD FUNCTION PLDBG_DROP_BREAKPOINT( session INTEGER, func OID, linenumber INTEGER );
ALTER EXTENSION PLDBGAPI ADD FUNCTION PLDBG_GET_BREAKPOINTS( session INTEGER );
ALTER EXTENSION PLDBGAPI ADD FUNCTION PLDBG_GET_SOURCE( session INTEGER, func OID );
ALTER EXTENSION PLDBGAPI ADD FUNCTION PLDBG_GET_STACK( session INTEGER );
ALTER EXTENSION PLDBGAPI ADD FUNCTION PLDBG_GET_PROXY_INFO( );
ALTER EXTENSION PLDBGAPI ADD FUNCTION PLDBG_GET_VARIABLES( session INTEGER );
ALTER EXTENSION PLDBGAPI ADD FUNCTION PLDBG_SELECT_FRAME( session INTEGER, frame INTEGER );
ALTER EXTENSION PLDBGAPI ADD FUNCTION PLDBG_SET_BREAKPOINT( session INTEGER, func OID, linenumber INTEGER );
ALTER EXTENSION PLDBGAPI ADD FUNCTION PLDBG_SET_GLOBAL_BREAKPOINT( session INTEGER, func OID, linenumber INTEGER, targetPID INTEGER );
ALTER EXTENSION PLDBGAPI ADD FUNCTION PLDBG_STEP_INTO( session INTEGER );
ALTER EXTENSION PLDBGAPI ADD FUNCTION PLDBG_STEP_OVER( session INTEGER );
ALTER EXTENSION PLDBGAPI ADD FUNCTION PLDBG_WAIT_FOR_BREAKPOINT( session INTEGER );
ALTER EXTENSION PLDBGAPI ADD FUNCTION PLDBG_WAIT_FOR_TARGET( session INTEGER );
ALTER EXTENSION PLDBGAPI ADD FUNCTION PLDBG_GET_TARGET_INFO( signature TEXT, targetType "char" );

DO $do$

declare
  isedb bool;
begin

  isedb = (SELECT version() LIKE 'EnterpriseDB%');

  -- Add a couple of EDB specific functions
  IF isedb THEN
    ALTER EXTENSION PLDBGAPI ADD EDB_OID_DEBUG( functionOID oid );
    ALTER EXTENSION PLDBGAPI ADD PLDBG_GET_PKG_CONS( packageOID oid );
  END IF;

$do$;
